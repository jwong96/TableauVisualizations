<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0tm9uw0075x6nz1cbc9fv0tylx1w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0ox4y3o15p7f7u183e1ko0neu0rn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/Portfolio Projects/Analyze Covid Data/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ox4y3o15p7f7u183e1ko0neu0rn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ox4y3o15p7f7u183e1ko0neu0rn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_280B4BBED38E411E9961F97420FFBAC6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_280B4BBED38E411E9961F97420FFBAC6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_280B4BBED38E411E9961F97420FFBAC6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_280B4BBED38E411E9961F97420FFBAC6]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_280B4BBED38E411E9961F97420FFBAC6'>
            <properties context=''>
              <relation connection='excel-direct.0ox4y3o15p7f7u183e1ko0neu0rn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1cx4pr704s8lx71ezvsci0fwuztv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.16ek1vq1dj9rof18s1sqo1e3gbtd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/Portfolio Projects/Analyze Covid Data/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.16ek1vq1dj9rof18s1sqo1e3gbtd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.16ek1vq1dj9rof18s1sqo1e3gbtd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9D2E32A3B670437E9D0B6A118FC5EBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9D2E32A3B670437E9D0B6A118FC5EBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9D2E32A3B670437E9D0B6A118FC5EBCC]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9D2E32A3B670437E9D0B6A118FC5EBCC'>
            <properties context=''>
              <relation connection='excel-direct.16ek1vq1dj9rof18s1sqo1e3gbtd' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0hqbx94084gd9510qussu09h3bia' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1mc4gef0yg3ffe16hm0c81y1311o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/Portfolio Projects/Analyze Covid Data/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mc4gef0yg3ffe16hm0c81y1311o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mc4gef0yg3ffe16hm0c81y1311o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_04ADD443FCD64F7B82C6C1A70A643642]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_04ADD443FCD64F7B82C6C1A70A643642]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_04ADD443FCD64F7B82C6C1A70A643642]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_04ADD443FCD64F7B82C6C1A70A643642]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_04ADD443FCD64F7B82C6C1A70A643642]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_04ADD443FCD64F7B82C6C1A70A643642'>
            <properties context=''>
              <relation connection='excel-direct.1mc4gef0yg3ffe16hm0c81y1311o' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0n6t2l51befxga16grqj11wdtemc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1bernyd1fxf9i513gqmky0odx5vv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/Portfolio Projects/Analyze Covid Data/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bernyd1fxf9i513gqmky0odx5vv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bernyd1fxf9i513gqmky0odx5vv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C63B023B00B143ADB0C3224F1F03935F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C63B023B00B143ADB0C3224F1F03935F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C63B023B00B143ADB0C3224F1F03935F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C63B023B00B143ADB0C3224F1F03935F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C63B023B00B143ADB0C3224F1F03935F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C63B023B00B143ADB0C3224F1F03935F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C63B023B00B143ADB0C3224F1F03935F'>
            <properties context=''>
              <relation connection='excel-direct.1bernyd1fxf9i513gqmky0odx5vv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0tm9uw0075x6nz1cbc9fv0tylx1w' />
          </datasources>
          <datasource-dependencies datasource='federated.0tm9uw0075x6nz1cbc9fv0tylx1w'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[:Measure Names]' value='157' />
            <format attr='height' value='72' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#b4b4b4' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{04F9BFF9-4AB7-414A-A245-7B5882C1CA9B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1cx4pr704s8lx71ezvsci0fwuztv' />
          </datasources>
          <datasource-dependencies datasource='federated.1cx4pr704s8lx71ezvsci0fwuztv'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cx4pr704s8lx71ezvsci0fwuztv].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9E897709-5010-4E5B-8B64-BB274516C4F9}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0hqbx94084gd9510qussu09h3bia' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hqbx94084gd9510qussu09h3bia'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hqbx94084gd9510qussu09h3bia].[Longitude (generated)]' field-type='quantitative' max='50933175.642941691' min='24503003.537167691' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0hqbx94084gd9510qussu09h3bia].[Latitude (generated)]' field-type='quantitative' max='11590839.960951593' min='-3063513.2485201666' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0hqbx94084gd9510qussu09h3bia].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0hqbx94084gd9510qussu09h3bia].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0hqbx94084gd9510qussu09h3bia].[none:Location:nk]' />
              <color column='[federated.0hqbx94084gd9510qussu09h3bia].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0hqbx94084gd9510qussu09h3bia].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hqbx94084gd9510qussu09h3bia].[Latitude (generated)]</rows>
        <cols>[federated.0hqbx94084gd9510qussu09h3bia].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{974BBB0F-C1DD-461D-A1BD-344E92A97601}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0n6t2l51befxga16grqj11wdtemc' />
          </datasources>
          <datasource-dependencies datasource='federated.0n6t2l51befxga16grqj11wdtemc'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0n6t2l51befxga16grqj11wdtemc].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]' />
              <text column='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]' />
              <color column='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Forecast Indicator:nk]' />
              <text column='[federated.0n6t2l51befxga16grqj11wdtemc].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n6t2l51befxga16grqj11wdtemc].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0n6t2l51befxga16grqj11wdtemc].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{CB0292BE-5196-446C-89CD-39ADB8E1A9B7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='11' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='8' param='horz' type-v2='layout-flow' w='83733' x='468' y='885'>
              <zone h='98230' id='6' type-v2='layout-basic' w='83733' x='468' y='885'>
                <zone h='24558' id='3' name='Sheet 1' w='41865' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24557' id='9' name='Sheet 2' w='41865' x='468' y='25443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49115' id='13' name='Sheet 3' w='41868' x='42333' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49115' id='15' name='Sheet 4' w='83733' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='262' h='98230' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='15331' x='84201' y='885'>
              <zone h='16150' id='12' name='Sheet 2' pane-specification-id='0' param='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]' type-v2='color' w='15331' x='84201' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.0hqbx94084gd9510qussu09h3bia].[sum:PercentPopulationInfected:qk]' type-v2='color' w='15331' x='84201' y='17035'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29425' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]&#10;[federated.0n6t2l51befxga16grqj11wdtemc].[none:Forecast Indicator:nk]' type-v2='color' w='15331' x='84201' y='24225'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='23' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
                <zone fixed-size='189' h='24558' id='3' is-fixed='true' name='Sheet 1' w='41865' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49115' id='13' is-fixed='true' name='Sheet 3' w='41868' x='42333' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7190' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.0hqbx94084gd9510qussu09h3bia].[sum:PercentPopulationInfected:qk]' type-v2='color' w='15331' x='84201' y='17035'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24557' id='9' is-fixed='true' name='Sheet 2' w='41865' x='468' y='25443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16150' id='12' name='Sheet 2' pane-specification-id='0' param='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]' type-v2='color' w='15331' x='84201' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49115' id='15' is-fixed='true' name='Sheet 4' w='83733' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29425' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]&#10;[federated.0n6t2l51befxga16grqj11wdtemc].[none:Forecast Indicator:nk]' type-v2='color' w='15331' x='84201' y='24225'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DEF9DCF2-CD10-4F9A-AD01-EA9351C73398}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tm9uw0075x6nz1cbc9fv0tylx1w].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64BE1061-4A8A-4C27-8D40-B0172682A50F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE000C6D-0403-46AC-A101-D9CB34F5F929}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqbx94084gd9510qussu09h3bia].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqbx94084gd9510qussu09h3bia].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E196B715-8A8A-448D-B9E5-CA3E40DEB52A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]&#10;[federated.0n6t2l51befxga16grqj11wdtemc].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0n6t2l51befxga16grqj11wdtemc].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0n6t2l51befxga16grqj11wdtemc].[none:Forecast Indicator:nk]</field>
            <field>[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]</field>
            <field>[federated.0n6t2l51befxga16grqj11wdtemc].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35D0E215-A470-4A40-BEBD-01C7AD4BB03A}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1cx4pr704s8lx71ezvsci0fwuztv].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0n6t2l51befxga16grqj11wdtemc].[none:Forecast Indicator:nk]</field>
              <field>[federated.0n6t2l51befxga16grqj11wdtemc].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{822119EA-06DA-4F97-AC9B-823C21BA1F4A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      8ve2Y8R/bbkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='96' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
